version: '3.8'

services:
  app:
    build:
      context: .
      target: runner
    network_mode: "host"
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - PORT=5000
      - DOCKER_ENV=true
      - SQLSERVER_HOST=localhost\\SQLEXPRESS
      - SQLSERVER_PORT=1433
      - SQLSERVER_USER=prodtusr
      - SQLSERVER_PASSWORD=Pro1767*
      - SQLSERVER_PROD_DB=Production_Analytics
      - SQLSERVER_SALE_DB=Sale
      - DB_POOL_MIN=1
      - DB_POOL_MAX=2
      - DB_IDLE_TIMEOUT=300000
      - DB_ACQUIRE_TIMEOUT=30000
    volumes:
      - ./logs:/app/logs
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:5000/api/health', (res) => { process.exit(res.statusCode === 200 ? 0 : 1) })"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:14-alpine
    restart: unless-stopped
    environment:
      - POSTGRES_USER=yourusername
      - POSTGRES_PASSWORD=yourpassword
      - POSTGRES_DB=yourdb
    volumes:
      - postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

volumes:
  postgres-data:
  logs-data: